buildscript {
    repositories {
        jcenter()

        // Add SpotBugs required repo
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // Add SpotBugs
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.4"
    }
}

apply plugin: "java"
apply plugin: "eclipse"

apply plugin: "jacoco"

apply plugin: "findbugs"
apply plugin: "pmd"
apply plugin: "com.github.spotbugs"

apply plugin: "checkstyle"


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-library:1.3"
}

jar {
    baseName = "PlayTicTacToe"

    manifest {
        attributes(
            "Main-Class": "PlayTicTacToe"
        )
    }
}

test {
    reports {
        html.enabled = true
    }           
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }

    jacoco {
        append = false
    }
}

javadoc {
    failOnError false    
}


/**
 * Run code style/error checks
 */
findbugsMain {
    ignoreFailures true
    reports {
        xml.enabled false
        html.enabled true
    }
}

// SpotBugs
spotbugsMain {
    ignoreFailures = true
    reports {
       xml.enabled = false
       html.enabled = true
    }
}

spotbugsTest.enabled = false
// End SpotBugs config

pmd {
    ignoreFailures = true
    ruleSets = [
        "java-basic",
        "java-braces",
        //"java-clone",
        "java-codesize",
        //"java-comments",
        //"java-controversial",
        //"java-coupling",
        //"java-design",
        "java-empty",
        //"java-finalizers",
        "java-imports",
        //"java-junit",
        "java-naming",
        //"java-optimizations",
        "java-strictexception",
        "java-strings",
        "java-sunsecure",
        "java-typeresolution",
        "java-unnecessary",
        "java-unusedcode"
    ]
}

jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}


// Check Style Config
checkstyle {
    ignoreFailures = true
    showViolations = false
}

tasks.withType(Checkstyle) {
    reports {
        html.destination project.file("build/reports/checkstyle/main.html")
    }
}
checkstyleTest.enabled = false
// End Checkstyle config
