buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "java"
    id "application"
    id "eclipse"

    id "checkstyle"
    id "com.github.spotbugs" version "2.0.0"
    id "project-report"
    id "jacoco"
    id "pmd"

    // id "org.ysb33r.doxygen" version "0.5"
}

// apply plugin: "org.ysb33r.doxygen"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

// Configure Doxygen task
/*
doxygen {
    generate_html true

    template "documentation.config"

    source new File(projectDir,"src/main/java")
    //source new File(projectDir,"src/test/java")
    outputDir new File(buildDir,"docs")
}
*/

/**
 * Build cmdline jar
 */
task jarCmd(type: Jar) {
    from(sourceSets.main.output) {
        include "**/*.class"
    }

    baseName = "TestPrimeGenerator"

    manifest {
        attributes(
          "Main-Class": "edu.odu.cs.cs330.examples.guithread.driver.TestPrimeGenerator"
        )
    }
}

/**
 * Build GUI jar
 */
task jarGui(type: Jar) {
    from(sourceSets.main.output) {
        include "**/*.class"
    }

    baseName = "PrimeGui"

    manifest {
        attributes(
          "Main-Class": "edu.odu.cs.cs330.examples.guithread.driver.PrimeGui"
        )
    }
}

/**
 * Build Gui Thread jar
 */
task jarThd(type: Jar) {
    from(sourceSets.main.output) {
        include "**/*.class"
    }

    baseName = "PrimeGuiThread"

    manifest {
        attributes(
          "Main-Class": "edu.odu.cs.cs330.examples.guithread.driver.PrimeGuiThread"
        )
    }
}

task deploy(dependsOn: [
            jarCmd,
            jarGui,
            jarThd,
            // doxygen,
            javadoc]){
}

//------------------------------------------------------------------------------
// Analysis Tools
//------------------------------------------------------------------------------

// SpotBugs
spotbugsMain {
    ignoreFailures = true
    effort = "max"
    reportLevel = "medium"
    reports {
       xml.enabled = false
       html.enabled = true
    }
}

spotbugsTest.enabled = false
// End SpotBugs config

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

// Check Style Config
checkstyle {
    ignoreFailures = true
    showViolations = false
}

tasks.withType(Checkstyle) {
    reports {
        html.destination project.file("build/reports/checkstyle/main.html")
    }
}
checkstyleTest.enabled = false
// End Checkstyle config

pmd {
    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}


